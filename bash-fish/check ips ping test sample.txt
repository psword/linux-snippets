Import-Module 'C:\Users\Lia Cha\Documents\Windows Powershell\Modules\Invoke-Parallel.psm1'

   $machines = Get-Content C:\work\hostnames.txt

   Invoke-Parallel -InputObject $machines -RunspaceTimeout 10 -Throttle 10 -ErrorAction SilentlyContinue -ScriptBlock {
   $obj = "" | Select ComputerName,Ping,IPNumber,ForwardLookup,ReverseLookup,Result  
   $obj.ComputerName = $_  

  # ping each host  
  if(Test-Connection $_ -quiet -Count 1){  
       $obj.Ping = "OK"  
 $obj.Result = "OK"  
  }  
  else{  
       $obj.Ping = "Error"  
 $obj.Result = "Error"  
  }  

  # lookup IP addresses of the given host  
  [array]$IPAddresses = [System.Net.Dns]::GetHostAddresses($obj.ComputerName) | ?{$_.AddressFamily -eq "InterNetwork"} | %{$_.IPAddressToString}  

  # caputer count of IPs  
  $obj.IPNumber = ($IPAddresses | measure).count  

  # if there were IPs returned from DNS, go through each IP  
    if($IPAddresses){  
 $obj.ForwardLookup = "OK"  

    $IPAddresses | %{  
         $tmpreverse = $null  

            # perform reverse lookup on the given IP  
         $tmpreverse = [System.Net.Dns]::GetHostEntry($_).HostName 
         if($tmpreverse){  

                 # if the returned host name is the same as the name being processed from the input, the result is OK  
              if($tmpreverse -ieq $obj.ComputerName){  
                   $obj.ReverseLookup += "$_ : OK `n"  
              }  
              else{  
                   $obj.ReverseLookup += "$_ different hostname: $tmpreverse `n"  
                   $obj.Result = "Error"  
              }  
         }  
         else{  
              $obj.ReverseLookup = "No host found"  
              $obj.Result = "Error"  
         }  
 }  
  }  
  else{  
       $obj.ForwardLookup = "No IP found"  
       $obj.Result = "Error"  
  }  

  # return the output object  
  $obj | ft -AutoSize | out-string -width 4096 | out-file c:\work\Results.txt -Append}